name: Financial Advisor AI CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test
          - prod

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint
      continue-on-error: true
    
    - name: Run tests
      run: npm test
    
    - name: Build
      run: npm run build
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-files
        path: build/

  deploy:
    needs: build-and-test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set environment
      id: set-env
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
        else
          echo "ENVIRONMENT=dev" >> $GITHUB_ENV
        fi
    
    - name: Download build artifact
      uses: actions/download-artifact@v3
      with:
        name: build-files
        path: build
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: Get S3 bucket name
      id: get-bucket
      run: |
        BUCKET_NAME=$(aws cloudformation describe-stacks --stack-name FinancialAdvisorAI-${{ env.ENVIRONMENT }} --query "Stacks[0].Outputs[?OutputKey=='FrontendBucketName'].OutputValue" --output text)
        echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV
    
    - name: Deploy to S3
      run: |
        aws s3 sync build/ s3://${{ env.BUCKET_NAME }} --delete
    
    - name: Get CloudFront distribution ID
      id: get-cloudfront
      run: |
        DISTRIBUTION_ID=$(aws cloudformation describe-stacks --stack-name FinancialAdvisorAI-${{ env.ENVIRONMENT }} --query "Stacks[0].Outputs[?OutputKey=='CloudFrontURL'].OutputValue" --output text | sed 's/.*\///' | sed 's/\.amazonaws\.com//')
        echo "DISTRIBUTION_ID=$DISTRIBUTION_ID" >> $GITHUB_ENV
    
    - name: Invalidate CloudFront cache
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ env.DISTRIBUTION_ID }} --paths "/*"
